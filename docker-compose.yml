version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: finance-chatbot-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: finance_chatbot
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: finance-chatbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  nestjs:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: finance-chatbot-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/finance_chatbot
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      PYTHON_AGENT_URL: http://python-agent:8001
      NODE_ENV: development
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev

  python-agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: finance-chatbot-agent
    environment:
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/finance_chatbot
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      BRAVE_API_KEY: ${BRAVE_API_KEY}
      SERPER_API_KEY: ${SERPER_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
      LLM_PROVIDER: ${LLM_PROVIDER:-openai}
      SEARCH_PROVIDER: ${SEARCH_PROVIDER:-tavily}
      VECTOR_STORE: ${VECTOR_STORE:-pinecone}
    ports:
      - "8001:8001"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./agent:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload

  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: finance-chatbot-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - nestjs
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
